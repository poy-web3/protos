syntax = "proto3";

option go_package = "github.com/poy-web3/protos/ai_account_service";

enum ERR_CODE_AI_ACCOUNT_SERVICE {
    CODE_NO_ERROR = 0;
    CODE_ERR_MISSING_PARAM = -1;
    CODE_ERR_INVALID_PARAM = -2;
    CODE_ERR_DUPLICATE_REGISTERED_ACCOUNT = -3;
    CODE_ERR_RECOVER_UNEXISTED_ACCOUNT = -4;
    CODE_ERR_UNEXPIRED_TOKEN_REFRESH = -5;
}

message AIAccountRegisterRequest {
    repeated bytes facial_images = 1;
}

message AIAccountRegisterResponse {
    AIAccountRspHeader header = 1;
    string yid = 2;
    repeated string face_ids = 3;
}

message AIAccountRecoverRequest {
    repeated bytes facial_images = 1;
}

message AIAccountRecoverResponse {
    AIAccountRspHeader header = 1;
    string yid = 2;
}

message AIAccountRefreshTokenRequest {
    repeated bytes facial_images = 1;
    string yid = 2;
}

message AIAccountRefreshTokenResponse {
    AIAccountRspHeader header = 1;
    repeated string face_ids = 3;
    repeated string prev_face_ids = 4;
}

message AIAccountRspHeader {
    int32 ret = 1;
    string reason = 2;
}

service AIAccountService {
    rpc RegisterAccount(AIAccountRegisterRequest) returns (AIAccountRegisterResponse);
    rpc RecoverAccount(AIAccountRecoverRequest) returns (AIAccountRecoverResponse);
    rpc RefreshToken(AIAccountRefreshTokenRequest) returns (AIAccountRefreshTokenResponse);
}

// protoc --proto_path=. --go_out=../ai_account --go_opt=paths=source_relative --go-grpc_out=../ai_account --go-grpc_opt=paths=source_relative ai_account.proto