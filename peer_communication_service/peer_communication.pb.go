// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.24.3
// source: peer_communication.proto

package peer_communication_service

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ERR_CODE_PEER_COMMUNICATION_SERVICE int32

const (
	ERR_CODE_PEER_COMMUNICATION_SERVICE_CODE_NO_ERROR_PEER_COMMUNICATION_SERVICE          ERR_CODE_PEER_COMMUNICATION_SERVICE = 0
	ERR_CODE_PEER_COMMUNICATION_SERVICE_CODE_ERR_MISSING_PARAM_PEER_COMMUNICATION_SERVICE ERR_CODE_PEER_COMMUNICATION_SERVICE = -1
	ERR_CODE_PEER_COMMUNICATION_SERVICE_CODE_ERR_INVALID_PARAM_PEER_COMMUNICATION_SERVICE ERR_CODE_PEER_COMMUNICATION_SERVICE = -2
	ERR_CODE_PEER_COMMUNICATION_SERVICE_CODE_ERR_UNKNOWN_PEER_COMMUNICATION_SERVICE       ERR_CODE_PEER_COMMUNICATION_SERVICE = -1001
)

// Enum value maps for ERR_CODE_PEER_COMMUNICATION_SERVICE.
var (
	ERR_CODE_PEER_COMMUNICATION_SERVICE_name = map[int32]string{
		0:     "CODE_NO_ERROR_PEER_COMMUNICATION_SERVICE",
		-1:    "CODE_ERR_MISSING_PARAM_PEER_COMMUNICATION_SERVICE",
		-2:    "CODE_ERR_INVALID_PARAM_PEER_COMMUNICATION_SERVICE",
		-1001: "CODE_ERR_UNKNOWN_PEER_COMMUNICATION_SERVICE",
	}
	ERR_CODE_PEER_COMMUNICATION_SERVICE_value = map[string]int32{
		"CODE_NO_ERROR_PEER_COMMUNICATION_SERVICE":          0,
		"CODE_ERR_MISSING_PARAM_PEER_COMMUNICATION_SERVICE": -1,
		"CODE_ERR_INVALID_PARAM_PEER_COMMUNICATION_SERVICE": -2,
		"CODE_ERR_UNKNOWN_PEER_COMMUNICATION_SERVICE":       -1001,
	}
)

func (x ERR_CODE_PEER_COMMUNICATION_SERVICE) Enum() *ERR_CODE_PEER_COMMUNICATION_SERVICE {
	p := new(ERR_CODE_PEER_COMMUNICATION_SERVICE)
	*p = x
	return p
}

func (x ERR_CODE_PEER_COMMUNICATION_SERVICE) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ERR_CODE_PEER_COMMUNICATION_SERVICE) Descriptor() protoreflect.EnumDescriptor {
	return file_peer_communication_proto_enumTypes[0].Descriptor()
}

func (ERR_CODE_PEER_COMMUNICATION_SERVICE) Type() protoreflect.EnumType {
	return &file_peer_communication_proto_enumTypes[0]
}

func (x ERR_CODE_PEER_COMMUNICATION_SERVICE) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ERR_CODE_PEER_COMMUNICATION_SERVICE.Descriptor instead.
func (ERR_CODE_PEER_COMMUNICATION_SERVICE) EnumDescriptor() ([]byte, []int) {
	return file_peer_communication_proto_rawDescGZIP(), []int{0}
}

type GetBlockByHeightRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Height uint64 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
}

func (x *GetBlockByHeightRequest) Reset() {
	*x = GetBlockByHeightRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peer_communication_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByHeightRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHeightRequest) ProtoMessage() {}

func (x *GetBlockByHeightRequest) ProtoReflect() protoreflect.Message {
	mi := &file_peer_communication_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHeightRequest.ProtoReflect.Descriptor instead.
func (*GetBlockByHeightRequest) Descriptor() ([]byte, []int) {
	return file_peer_communication_proto_rawDescGZIP(), []int{0}
}

func (x *GetBlockByHeightRequest) GetHeight() uint64 {
	if x != nil {
		return x.Height
	}
	return 0
}

type GetBlockByHeightResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header       *CommonRspHeaderPeerCommunicationService `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	EncodedBlock []byte                                   `protobuf:"bytes,2,opt,name=encoded_block,json=encodedBlock,proto3" json:"encoded_block,omitempty"`
}

func (x *GetBlockByHeightResponse) Reset() {
	*x = GetBlockByHeightResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peer_communication_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetBlockByHeightResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetBlockByHeightResponse) ProtoMessage() {}

func (x *GetBlockByHeightResponse) ProtoReflect() protoreflect.Message {
	mi := &file_peer_communication_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetBlockByHeightResponse.ProtoReflect.Descriptor instead.
func (*GetBlockByHeightResponse) Descriptor() ([]byte, []int) {
	return file_peer_communication_proto_rawDescGZIP(), []int{1}
}

func (x *GetBlockByHeightResponse) GetHeader() *CommonRspHeaderPeerCommunicationService {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetBlockByHeightResponse) GetEncodedBlock() []byte {
	if x != nil {
		return x.EncodedBlock
	}
	return nil
}

type SendTxRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sender           []byte `protobuf:"bytes,1,opt,name=sender,proto3" json:"sender,omitempty"`
	Receiver         []byte `protobuf:"bytes,2,opt,name=receiver,proto3" json:"receiver,omitempty"`
	Amount           uint64 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	EncodedCoinsList []byte `protobuf:"bytes,4,opt,name=encoded_coins_list,json=encodedCoinsList,proto3" json:"encoded_coins_list,omitempty"`
}

func (x *SendTxRequest) Reset() {
	*x = SendTxRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peer_communication_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTxRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTxRequest) ProtoMessage() {}

func (x *SendTxRequest) ProtoReflect() protoreflect.Message {
	mi := &file_peer_communication_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTxRequest.ProtoReflect.Descriptor instead.
func (*SendTxRequest) Descriptor() ([]byte, []int) {
	return file_peer_communication_proto_rawDescGZIP(), []int{2}
}

func (x *SendTxRequest) GetSender() []byte {
	if x != nil {
		return x.Sender
	}
	return nil
}

func (x *SendTxRequest) GetReceiver() []byte {
	if x != nil {
		return x.Receiver
	}
	return nil
}

func (x *SendTxRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SendTxRequest) GetEncodedCoinsList() []byte {
	if x != nil {
		return x.EncodedCoinsList
	}
	return nil
}

type SendTxResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header *CommonRspHeaderPeerCommunicationService `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	Status bool                                     `protobuf:"varint,2,opt,name=status,proto3" json:"status,omitempty"`
}

func (x *SendTxResponse) Reset() {
	*x = SendTxResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peer_communication_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SendTxResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SendTxResponse) ProtoMessage() {}

func (x *SendTxResponse) ProtoReflect() protoreflect.Message {
	mi := &file_peer_communication_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SendTxResponse.ProtoReflect.Descriptor instead.
func (*SendTxResponse) Descriptor() ([]byte, []int) {
	return file_peer_communication_proto_rawDescGZIP(), []int{3}
}

func (x *SendTxResponse) GetHeader() *CommonRspHeaderPeerCommunicationService {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *SendTxResponse) GetStatus() bool {
	if x != nil {
		return x.Status
	}
	return false
}

type GetTxFromReadBufferRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTxFromReadBufferRequest) Reset() {
	*x = GetTxFromReadBufferRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peer_communication_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxFromReadBufferRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxFromReadBufferRequest) ProtoMessage() {}

func (x *GetTxFromReadBufferRequest) ProtoReflect() protoreflect.Message {
	mi := &file_peer_communication_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxFromReadBufferRequest.ProtoReflect.Descriptor instead.
func (*GetTxFromReadBufferRequest) Descriptor() ([]byte, []int) {
	return file_peer_communication_proto_rawDescGZIP(), []int{4}
}

type GetTxFromReadBufferResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Header        *CommonRspHeaderPeerCommunicationService `protobuf:"bytes,1,opt,name=header,proto3" json:"header,omitempty"`
	EncodedTxList []byte                                   `protobuf:"bytes,2,opt,name=encoded_tx_list,json=encodedTxList,proto3" json:"encoded_tx_list,omitempty"`
}

func (x *GetTxFromReadBufferResponse) Reset() {
	*x = GetTxFromReadBufferResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peer_communication_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTxFromReadBufferResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxFromReadBufferResponse) ProtoMessage() {}

func (x *GetTxFromReadBufferResponse) ProtoReflect() protoreflect.Message {
	mi := &file_peer_communication_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxFromReadBufferResponse.ProtoReflect.Descriptor instead.
func (*GetTxFromReadBufferResponse) Descriptor() ([]byte, []int) {
	return file_peer_communication_proto_rawDescGZIP(), []int{5}
}

func (x *GetTxFromReadBufferResponse) GetHeader() *CommonRspHeaderPeerCommunicationService {
	if x != nil {
		return x.Header
	}
	return nil
}

func (x *GetTxFromReadBufferResponse) GetEncodedTxList() []byte {
	if x != nil {
		return x.EncodedTxList
	}
	return nil
}

type CommonRspHeaderPeerCommunicationService struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Reason string `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
}

func (x *CommonRspHeaderPeerCommunicationService) Reset() {
	*x = CommonRspHeaderPeerCommunicationService{}
	if protoimpl.UnsafeEnabled {
		mi := &file_peer_communication_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommonRspHeaderPeerCommunicationService) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommonRspHeaderPeerCommunicationService) ProtoMessage() {}

func (x *CommonRspHeaderPeerCommunicationService) ProtoReflect() protoreflect.Message {
	mi := &file_peer_communication_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommonRspHeaderPeerCommunicationService.ProtoReflect.Descriptor instead.
func (*CommonRspHeaderPeerCommunicationService) Descriptor() ([]byte, []int) {
	return file_peer_communication_proto_rawDescGZIP(), []int{6}
}

func (x *CommonRspHeaderPeerCommunicationService) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *CommonRspHeaderPeerCommunicationService) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_peer_communication_proto protoreflect.FileDescriptor

var file_peer_communication_proto_rawDesc = []byte{
	0x0a, 0x18, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x31, 0x0a, 0x17, 0x47, 0x65,
	0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x22, 0x81, 0x01,
	0x0a, 0x18, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67,
	0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x43, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72,
	0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x23, 0x0a, 0x0d,
	0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x0c, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x22, 0x89, 0x01, 0x0a, 0x0d, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x06, 0x73, 0x65, 0x6e, 0x64, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x08, 0x72,
	0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x2c, 0x0a, 0x12, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x5f, 0x63, 0x6f, 0x69, 0x6e, 0x73,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x43, 0x6f, 0x69, 0x6e, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x6a, 0x0a,
	0x0e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x28, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x1c, 0x0a, 0x1a, 0x47, 0x65, 0x74,
	0x54, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x1b, 0x47, 0x65, 0x74, 0x54,
	0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x40, 0x0a, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x28, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e,
	0x52, 0x73, 0x70, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x52, 0x06, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0f, 0x65, 0x6e, 0x63,
	0x6f, 0x64, 0x65, 0x64, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x54, 0x78, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x53, 0x0a, 0x27, 0x43, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x52, 0x73, 0x70, 0x48, 0x65,
	0x61, 0x64, 0x65, 0x72, 0x50, 0x65, 0x65, 0x72, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x10, 0x0a, 0x03,
	0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x16,
	0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06,
	0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x2a, 0x8d, 0x02, 0x0a, 0x23, 0x45, 0x52, 0x52, 0x5f, 0x43,
	0x4f, 0x44, 0x45, 0x5f, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x12, 0x2c,
	0x0a, 0x28, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x4e, 0x4f, 0x5f, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f,
	0x50, 0x45, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x00, 0x12, 0x3e, 0x0a, 0x31,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x4d, 0x49, 0x53, 0x53, 0x49, 0x4e, 0x47,
	0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x10, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x3e, 0x0a, 0x31,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44,
	0x5f, 0x50, 0x41, 0x52, 0x41, 0x4d, 0x5f, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d,
	0x55, 0x4e, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x10, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x12, 0x38, 0x0a, 0x2b,
	0x43, 0x4f, 0x44, 0x45, 0x5f, 0x45, 0x52, 0x52, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e,
	0x5f, 0x50, 0x45, 0x45, 0x52, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x55, 0x4e, 0x49, 0x43, 0x41, 0x54,
	0x49, 0x4f, 0x4e, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x10, 0x97, 0xf8, 0xff, 0xff,
	0xff, 0xff, 0xff, 0xff, 0xff, 0x01, 0x32, 0xe0, 0x01, 0x0a, 0x18, 0x50, 0x65, 0x65, 0x72, 0x43,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x12, 0x47, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42,
	0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x18, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f,
	0x63, 0x6b, 0x42, 0x79, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x19, 0x2e, 0x47, 0x65, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x42, 0x79, 0x48, 0x65,
	0x69, 0x67, 0x68, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x29, 0x0a, 0x06,
	0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x12, 0x0e, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x53, 0x65, 0x6e, 0x64, 0x54, 0x78, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x50, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x78,
	0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1b,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x42, 0x75,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x47, 0x65,
	0x74, 0x54, 0x78, 0x46, 0x72, 0x6f, 0x6d, 0x52, 0x65, 0x61, 0x64, 0x42, 0x75, 0x66, 0x66, 0x65,
	0x72, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x30, 0x5a, 0x2e, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x70, 0x6f, 0x79, 0x2d, 0x77, 0x65, 0x62, 0x33,
	0x2f, 0x70, 0x65, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x5f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x33,
}

var (
	file_peer_communication_proto_rawDescOnce sync.Once
	file_peer_communication_proto_rawDescData = file_peer_communication_proto_rawDesc
)

func file_peer_communication_proto_rawDescGZIP() []byte {
	file_peer_communication_proto_rawDescOnce.Do(func() {
		file_peer_communication_proto_rawDescData = protoimpl.X.CompressGZIP(file_peer_communication_proto_rawDescData)
	})
	return file_peer_communication_proto_rawDescData
}

var file_peer_communication_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_peer_communication_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_peer_communication_proto_goTypes = []interface{}{
	(ERR_CODE_PEER_COMMUNICATION_SERVICE)(0),        // 0: ERR_CODE_PEER_COMMUNICATION_SERVICE
	(*GetBlockByHeightRequest)(nil),                 // 1: GetBlockByHeightRequest
	(*GetBlockByHeightResponse)(nil),                // 2: GetBlockByHeightResponse
	(*SendTxRequest)(nil),                           // 3: SendTxRequest
	(*SendTxResponse)(nil),                          // 4: SendTxResponse
	(*GetTxFromReadBufferRequest)(nil),              // 5: GetTxFromReadBufferRequest
	(*GetTxFromReadBufferResponse)(nil),             // 6: GetTxFromReadBufferResponse
	(*CommonRspHeaderPeerCommunicationService)(nil), // 7: CommonRspHeaderPeerCommunicationService
}
var file_peer_communication_proto_depIdxs = []int32{
	7, // 0: GetBlockByHeightResponse.header:type_name -> CommonRspHeaderPeerCommunicationService
	7, // 1: SendTxResponse.header:type_name -> CommonRspHeaderPeerCommunicationService
	7, // 2: GetTxFromReadBufferResponse.header:type_name -> CommonRspHeaderPeerCommunicationService
	1, // 3: PeerCommunicationService.GetBlockByHeight:input_type -> GetBlockByHeightRequest
	3, // 4: PeerCommunicationService.SendTx:input_type -> SendTxRequest
	5, // 5: PeerCommunicationService.GetTxFromReadBuffer:input_type -> GetTxFromReadBufferRequest
	2, // 6: PeerCommunicationService.GetBlockByHeight:output_type -> GetBlockByHeightResponse
	4, // 7: PeerCommunicationService.SendTx:output_type -> SendTxResponse
	6, // 8: PeerCommunicationService.GetTxFromReadBuffer:output_type -> GetTxFromReadBufferResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_peer_communication_proto_init() }
func file_peer_communication_proto_init() {
	if File_peer_communication_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_peer_communication_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByHeightRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peer_communication_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetBlockByHeightResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peer_communication_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTxRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peer_communication_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SendTxResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peer_communication_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxFromReadBufferRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peer_communication_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTxFromReadBufferResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_peer_communication_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommonRspHeaderPeerCommunicationService); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_peer_communication_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_peer_communication_proto_goTypes,
		DependencyIndexes: file_peer_communication_proto_depIdxs,
		EnumInfos:         file_peer_communication_proto_enumTypes,
		MessageInfos:      file_peer_communication_proto_msgTypes,
	}.Build()
	File_peer_communication_proto = out.File
	file_peer_communication_proto_rawDesc = nil
	file_peer_communication_proto_goTypes = nil
	file_peer_communication_proto_depIdxs = nil
}
